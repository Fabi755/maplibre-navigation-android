org.maplibre.navigation.android.core.crashreporter.MapLibreUncaughtExceptionHandler --> Removed. Not used internally. Make for me no sense to keep this.

org.maplibre.navigation.android.core.FileUtils --> Removed. Only used by CrashReport

org.maplibre.navigation.android.core.crashreporter.CrashReport --> Removed. Not used internally. Make for me no sense to keep this.
org.maplibre.navigation.android.core.crashreporter.CrashReportBuilder --> Removed. Only used to build CrashReport instance

org.maplibre.navigation.android.navigation.v5.milestone.Milestone --> Remove Builder, use named arguments in constructor instead.
org.maplibre.navigation.android.navigation.v5.routeprogress.* --> Convert all @AutoValue classes to Kotlin data classes. (Also Builder pattern is not used here anymore)
org.maplibre.navigation.android.navigation.v5.models.* -->
    - Convert all @AutoValue classes to Kotlin data classes. (Also Builder pattern is not used here anymore). Using KotlinX instead of GSON for JSON parsing.
    - Convert annotation types to enums
    - Using Kotlinx serialization instead of GSON for JSON parsing
    - Remove classes MapLibreStreetsV8, DirectionsJsonObject, DirectionsAdapterFactory
org.maplibre.navigation.android.navigation.v5.utils.abbreviation.* --> Removed. Not used internally. I think it is also not used by developers.
org.maplibre.navigation.android.navigation.v5.utils.TextUtils --> Removed. Can be replaced by Android's TextUtils or by Kotlin language functions.

----------------
Refactor later:

org.maplibre.navigation.android.navigation.v5.milestone.TriggerProperty --> Seems too complicated
Instead of parsing models directly, add dtos and mappers that can be replaces by developers to use other API engines

----------------
Discuss:

