apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'io.github.gradle-nexus.publish-plugin'

buildscript {
    apply from: "${rootDir}/gradle/dependencies.gradle"

  repositories {
    google()
    mavenCentral()
    maven { url 'https://plugins.gradle.org/m2' }
  }

  dependencies {
    classpath pluginDependencies.gradle
    classpath pluginDependencies.coveralls
    classpath pluginDependencies.errorprone
    classpath pluginDependencies.dependencyUpdates
    classpath pluginDependencies.kotlinGradle
    classpath pluginDependencies.kotlinxSerialization
    classpath pluginDependencies.kotlinMultiplatform
    classpath pluginDependencies.kotlinCocoapods
    classpath pluginDependencies.kotlinDokka
    classpath pluginDependencies.nexus
  }
}

task testReport(type: TestReport, group: 'Build') {
  description = 'Generates an aggregate test report'
  destinationDir = file("${buildDir}/reports/allTests")
}

allprojects {
  repositories {
    google()
    maven { url 'https://plugins.gradle.org/m2' }
  }
}

subprojects {
  apply plugin: 'idea'
  apply plugin: 'net.ltgt.errorprone'
  apply from: "${rootDir}/gradle/dependencies.gradle"

  dependencies {
    errorprone dependenciesList.errorprone
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

apply from: file("${rootDir}/gradle/artifact-settings.gradle")
apply from: file("${rootDir}/gradle/publish-root.gradle")

nexusPublishing {
    repositories {
        sonatype {
            useStaging = !project.ext.isSnapshot
            stagingProfileId = sonatypeStagingProfileId

            username = ossrhUsername
            password = ossrhPassword

            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }

    transitionCheckOptions {
        maxRetries = 120
        delayBetween = Duration.ofSeconds(10)
    }
}
